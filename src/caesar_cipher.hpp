void caesar_encode (char *x)
{
    string t = x;
    for (int i=0; i<t.length(); i++)
    {
    	switch (t[i])
    	{
	    case 'a': t[i] = 'x';
	    break;
	    case 'b': t[i] = 'y';
	    break;
	    case 'c': t[i] = 'z';
	    break;
	    case 'd': t[i] = 'a';
	    break;
	    case 'e': t[i] = 'b';
	    break;
	    case 'f': t[i] = 'c';
	    break;
	    case 'g': t[i] = 'd';
	    break;
	    case 'h': t[i] = 'e';
	    break;
	    case 'i': t[i] = 'f';
	    break;
	    case 'j': t[i] = 'g';
	    break;
	    case 'k': t[i] = 'h';
	    break;
	    case 'l': t[i] = 'i';
	    break;
	    case 'm': t[i] = 'j';
	    break;
	    case 'n': t[i] = 'k';
	    break;
	    case 'o': t[i] = 'l';
	    break;
	    case 'p': t[i] = 'm';
	    break;
	    case 'q': t[i] = 'n';
	    break;
	    case 'r': t[i] = 'o';
	    break;
	    case 's': t[i] = 'p';
	    break;
	    case 't': t[i] = 'q';
	    break;
	    case 'u': t[i] = 'r';
	    break;
	    case 'v': t[i] = 's';
	    break;
	    case 'w': t[i] = 't';
	    break;
	    case 'x': t[i] = 'u';
	    break;
	    case 'y': t[i] = 'v';
	    break;
	    case 'z': t[i] = 'w';
	    break;
	    case ' ': t[i] = ' ';
	    break;
	    case 'A': t[i] = 'X';
	    break;
	    case 'B': t[i] = 'Y';
	    break;
	    case 'C': t[i] = 'Z';
	    break;
	    case 'D': t[i] = 'A';
	    break;
	    case 'E': t[i] = 'B';
	    break;
	    case 'F': t[i] = 'C';
	    break;
	    case 'G': t[i] = 'D';
	    break;
	    case 'H': t[i] = 'E';
	    break;
	    case 'I': t[i] = 'F';
	    break;
	    case 'J': t[i] = 'G';
	    break;
	    case 'K': t[i] = 'H';
	    break;
	    case 'L': t[i] = 'I';
	    break;
	    case 'M': t[i] = 'J';
	    break;
	    case 'N': t[i] = 'K';
	    break;
	    case 'O': t[i] = 'L';
	    break;
	    case 'P': t[i] = 'M';
	    break;
	    case 'Q': t[i] = 'N';
	    break;
	    case 'R': t[i] = 'O';
	    break;
	    case 'S': t[i] = 'P';
	    break;
	    case 'T': t[i] = 'Q';
	    break;
	    case 'U': t[i] = 'R';
	    break;
	    case 'V': t[i] = 'S';
	    break;
	    case 'W': t[i] = 'T';
	    break;
	    case 'X': t[i] = 'U';
	    break;
	    case 'Y': t[i] = 'V';
	    break;
	    case 'Z': t[i] = 'W';
	    break;
    	}
    }
    cout << t << " ";
}

void caesar_decode (char *x)
{
    string t = x;
    for (int i=0; i<t.length(); i++)
    {
    	switch (t[i])
    	{
	    case 'x': t[i] = 'a';
	    break;
	    case 'y': t[i] = 'b';
	    break;
	    case 'z': t[i] = 'c';
	    break;
	    case 'a': t[i] = 'd';
	    break;
	    case 'b': t[i] = 'e';
	    break;
	    case 'c': t[i] = 'f';
	    break;
	    case 'd': t[i] = 'g';
	    break;
	    case 'e': t[i] = 'h';
	    break;
	    case 'f': t[i] = 'i';
	    break;
	    case 'g': t[i] = 'j';
	    break;
	    case 'h': t[i] = 'k';
	    break;
	    case 'i': t[i] = 'l';
	    break;
	    case 'j': t[i] = 'm';
	    break;
	    case 'k': t[i] = 'n';
	    break;
	    case 'l': t[i] = 'o';
	    break;
	    case 'm': t[i] = 'p';
	    break;
	    case 'n': t[i] = 'q';
	    break;
	    case 'o': t[i] = 'r';
	    break;
	    case 'p': t[i] = 's';
	    break;
	    case 'q': t[i] = 't';
	    break;
	    case 'r': t[i] = 'u';
	    break;
	    case 's': t[i] = 'v';
	    break;
	    case 't': t[i] = 'w';
	    break;
	    case 'u': t[i] = 'x';
	    break;
	    case 'v': t[i] = 'y';
	    break;
	    case 'w': t[i] = 'z';
	    break;
	    case ' ': t[i] = ' ';
	    break;
	    case 'X': t[i] = 'A';
	    break;
	    case 'Y': t[i] = 'B';
	    break;
	    case 'Z': t[i] = 'C';
	    break;
	    case 'A': t[i] = 'D';
	    break;
	    case 'B': t[i] = 'E';
	    break;
	    case 'C': t[i] = 'F';
	    break;
	    case 'D': t[i] = 'G';
	    break;
	    case 'E': t[i] = 'H';
	    break;
	    case 'F': t[i] = 'I';
	    break;
	    case 'G': t[i] = 'J';
	    break;
	    case 'H': t[i] = 'K';
	    break;
	    case 'I': t[i] = 'L';
	    break;
	    case 'J': t[i] = 'M';
	    break;
	    case 'K': t[i] = 'N';
	    break;
	    case 'L': t[i] = 'O';
	    break;
	    case 'M': t[i] = 'P';
	    break;
	    case 'N': t[i] = 'Q';
	    break;
	    case 'O': t[i] = 'R';
	    break;
	    case 'P': t[i] = 'S';
	    break;
	    case 'Q': t[i] = 'T';
	    break;
	    case 'R': t[i] = 'U';
	    break;
	    case 'S': t[i] = 'V';
	    break;
	    case 'T': t[i] = 'W';
	    break;
	    case 'U': t[i] = 'X';
	    break;
	    case 'V': t[i] = 'Y';
	    break;
	    case 'W': t[i] = 'Z';
	    break;
    	}
    }
    cout << t << " ";
}
